{"version":3,"sources":["../../../../src/js/components/Terminal/index.js"],"names":["compLogic","comp","a","b","parseInt","putCursorAtEnd","el","document","activeElement","focus","setSelectionRange","len","value","length","setTimeout","Terminal","props","componentWillMount","loadPlugins","assembleCommands","setDescriptions","setShortcuts","createTab","componentDidMount","watchConsoleLogging","force","allowTabs","promptSymbol","tabs","state","id","push","handleChange","handlerKeyPress","args","registerInstance","setState","activeTab","removeTab","index","splice","getAppContent","show","minimise","getBar","getContent","getNote","color","style","showActions","hideTopBar","actionHandlers","height","animation","fontFamily","fontSize","setActiveTab","closedTitle","toggleState","closedMessage","getPluginData","pluginData","name","setPluginData","data","descriptions","defaultDesciptions","plugins","plugin","shortcuts","defaultShortcuts","setPromptPrefix","instance","promptPrefix","controller","setPromptSymbol","prompt","setFalse","setTrue","setValueWithHistory","position","inputRef","history","historyCounter","checkVersion","ver","test","Error","clean","toLowerCase","replace","split","realSplit","version","checkBools","map","val","indexOf","instances","pluginInstances","pluginMethods","old","find","i","PluginClass","config","api","printLine","bind","removeLine","runCommand","setCanScroll","setScrollPosition","focusInput","getPluginMethod","takeControl","pluginTakeControl","releaseControl","pluginReleaseControl","getData","displayName","setData","os","updateApi","getPublicMethods","_getName","_getVersion","e","console","error","realIndex","insts","filter","newPrompt","newPromptPrefix","oldPrefix","oldPrompt","commands","defaultCommands","autocompleteValue","keysToCheck","Object","keys","key","ratings","findBestMatch","reduce","full","item","target","rating","clearScreen","summary","checkShortcuts","cuts","instanceData","values","forEach","keyInputs","modKey","options","cut","slice","shortcut","action","preventDefault","stopPropagation","editLine","line","_","join","input","saveToHistory","shiftKey","dontShowCommand","res","newHistory","historyProps","afterChange","onKeyPress","tabbed","contents","styles","marginRight","width","display","marginBottom","defaultData","method","canScroll","pos","inp","std","print","readStdOut","lineNumber","inputText","inputArray","command","log","commandPassThrough","parsedArgs","parse","type","help","needsInstance","commandWasRun","runCommandOnActive","printToActive","showHelp","option","clear","echo","description","init","defaultValue","darwin","startState","maximise","barShowing","tabsShowing","openWindow","closeWindow","minimiseWindow","unminimiseWindow","maximiseWindow","unmaximiseWindow","toggleShow","toggleMaximise","toggleMinimize","theme","barColor","outputColor","backgroundColor","children","propTypes","defaultProps","childContextTypes"],"mappings":"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","file":"index.js","sourcesContent":["/* eslint-disable no-console, react/sort-comp */\nimport React, { Component } from 'react';\nimport stringSimilarity from 'string-similarity';\nimport whatkey from 'whatkey';\nimport isEqual from 'lodash.isequal';\nimport { ThemeProvider } from 'styled-components';\nimport { handleLogging } from '../../utils';\nimport {\n  TerminalPropTypes,\n  TerminalContextTypes,\n  TerminalDefaultProps,\n} from '../types';\n\nimport { os, pluginMap, uuidv4, getShortcuts, modCommands } from './terminal-utils';\nimport { Base, ContainerWrapper, Note } from './styled-elements';\n\nimport Bar from '../Bar';\nimport Content from '../Content/index';\nimport Tabs from '../Tabs/index';\n\nfunction compLogic(comp) {\n  switch (comp) {\n    case '>':\n      return (a, b) => parseInt(a, 10) > parseInt(b, 10);\n    case '<':\n      return (a, b) => parseInt(a, 10) < parseInt(b, 10);\n    case '>=':\n      return (a, b) => parseInt(a, 10) >= parseInt(b, 10);\n    case '<=':\n      return (a, b) => parseInt(a, 10) <= parseInt(b, 10);\n    case '!=':\n      return (a, b) => a !== b;\n    case '=':\n    default:\n      return (a, b) => a === b;\n  }\n}\n\nfunction putCursorAtEnd(el) {\n  // Only focus if input isn't already\n  if (document.activeElement !== el) {\n    el.focus();\n  }\n\n  // If this function exists... (IE 9+)\n  if (el.setSelectionRange) {\n    // Double the length because Opera is inconsistent about whether a carriage\n    // return is one character or two.\n    const len = el.value.length * 2;\n\n    // Timeout seems to be required for Blink\n    setTimeout(() => {\n      el.setSelectionRange(len, len);\n    }, 1);\n  } else {\n    // As a fallback, replace the contents with itself\n    // Doesn't work in Chrome, but Chrome supports setSelectionRange\n    el.value = el.value;\n  }\n}\n\nclass Terminal extends Component {\n  static displayName = 'Terminal';\n\n  static version = '4.3.0';\n\n  static propTypes = TerminalPropTypes;\n\n  static defaultProps = TerminalDefaultProps;\n\n  static childContextTypes = TerminalContextTypes;\n\n  constructor(props) {\n    super(props);\n\n    this.pluginData = {};\n\n    this.defaultCommands = {\n      // eslint-disable-line react/sort-comp\n      // show: {\n      //   method: () => null,\n      //   needsInstance: false,\n      // },\n      clear: {\n        method: this.clearScreen,\n        needsInstance: true,\n      },\n      help: {\n        method: this.showHelp,\n        needsInstance: true,\n      },\n      echo: input => input.slice(1).join(' '),\n      'edit-line': {\n        method: this.editLine,\n        needsInstance: true,\n        options: [\n          {\n            name: 'line',\n            description: 'the line you want to edit. -1 is the last line',\n            init: value => parseInt(value, 10),\n            defaultValue: -1,\n          },\n        ],\n      },\n    };\n\n    this.defaultDesciptions = {\n      // show: (props.msg && props.msg.length > 0) ? 'show the msg' : false,\n      clear: 'clear the screen',\n      help: 'list all the commands',\n      echo: false,\n      'edit-line': false,\n    };\n\n    this.defaultShortcuts = {\n      'win, linux, darwin': {\n        'alt + t': this.createTab,\n      },\n      'win, linux': {\n        'ctrl + l': 'clear',\n      },\n      darwin: {\n        'cmd + k': 'clear',\n      },\n    };\n\n    this.state = {\n      tabbed: false,\n      commands: {},\n      descriptions: {},\n      show: props.startState !== 'closed',\n      minimise: props.startState === 'minimised',\n      maximise: props.startState === 'maximised',\n      shortcuts: {},\n      activeTab: '',\n      tabs: [],\n      instances: [],\n    };\n  }\n\n  getChildContext() {\n    return {\n      instances: this.state.instances,\n      show: this.state.show,\n      minimise: this.state.minimise,\n      maximise: this.state.maximise,\n      activeTab: this.state.activeTab,\n      barShowing: !this.props.hideTopBar,\n      tabsShowing: this.props.allowTabs,\n      openWindow: this.setTrue('show'),\n      closeWindow: this.setFalse('show'),\n      minimiseWindow: this.setTrue('minimise'),\n      unminimiseWindow: this.setFalse('minimise'),\n      maximiseWindow: this.setTrue('maximise'),\n      unmaximiseWindow: this.setFalse('maximise'),\n      toggleShow: this.toggleState('show'),\n      toggleMaximise: this.toggleState('maximise'),\n      toggleMinimize: this.toggleState('minimise'),\n    };\n  }\n\n  // Prepare the symbol\n  componentWillMount = () => {\n    this.loadPlugins();\n    this.assembleCommands();\n    this.setDescriptions();\n    this.setShortcuts();\n\n    this.createTab(true);\n  };\n\n  // Load everything!\n  componentDidMount = () => {\n    if (this.props.watchConsoleLogging) {\n      this.watchConsoleLogging();\n    }\n  };\n\n  // Tab creation\n  createTab = (force = false) => {\n    const { allowTabs, promptSymbol } = this.props;\n    if (force || allowTabs) {\n      const { tabs } = this.state;\n      const id = uuidv4();\n\n      tabs.push((\n        <Content\n          key={id}\n          id={id}\n          prompt={promptSymbol}\n          handleChange={this.handleChange}\n          handlerKeyPress={this.handlerKeyPress}\n          register={(...args) => this.registerInstance(id, ...args)}\n        />\n      ));\n\n      this.setState({ activeTab: id, tabs });\n    }\n  };\n\n  // Tab removal\n  removeTab = (index) => {\n    const { tabs } = this.state;\n    tabs.splice(index, 1);\n    this.setState({ tabs });\n  }\n\n  // Show the content on toggling\n  getAppContent = () => {\n    const { show, minimise } = this.state;\n    if (!show) {\n      return this.getNote();\n    }\n    if (minimise) {\n      return this.getBar();\n    }\n    return this.getContent();\n  };\n\n  // Shows the full window (normal window)\n  getContent = () => {\n    const {\n      color,\n      style,\n      showActions,\n      hideTopBar,\n      allowTabs,\n      actionHandlers,\n    } = this.props;\n    const { activeTab, tabs } = this.state;\n    const baseStyle = {\n      height: '100%',\n      color: color || 'green',\n      animation: 'fadeIn 0.18s ease-in',\n      fontFamily: \"'Inconsolata', monospace\",\n      fontSize: '0.9em',\n    };\n    // This should be a syled component but breaks if it is...\n    return (\n      <div style={{ ...baseStyle, ...style }}>\n        {!hideTopBar && (\n          <Bar showActions={showActions} {...actionHandlers} />\n        )}\n        {allowTabs && (\n          <Tabs\n            active={activeTab}\n            setActiveTab={this.setActiveTab}\n            createTab={this.createTab}\n            removeTab={this.removeTab}\n          />\n        )}\n        {tabs}\n      </div>\n    );\n  };\n\n  // Show only bar (minimise)\n  getBar = () => {\n    const { style, showActions, actionHandlers } = this.props;\n\n    return (\n      <ContainerWrapper style={{ ...style }}>\n        <Bar\n          showActions={showActions}\n          {...actionHandlers}\n        />\n      </ContainerWrapper>\n    );\n  };\n\n  // Show msg (on window close)\n  getNote = () => (\n    <Note>\n      <h1>\n        {this.props.closedTitle}\n      </h1>\n      <img\n        src=\"https://camo.githubusercontent.com/95ad3fffa11193f85dedbf14ca67e4c5c07182d0/687474703a2f2f69636f6e732e69636f6e617263686976652e636f6d2f69636f6e732f70616f6d656469612f736d616c6c2d6e2d666c61742f313032342f7465726d696e616c2d69636f6e2e706e67\"\n        width=\"200\"\n        height=\"200\"\n        alt=\"note\"\n        onKeyPress={this.toggleState('show')}\n        onClick={this.toggleState('show')}\n      />\n      {this.props.closedMessage}\n    </Note>\n  );\n\n  // Plugin data getter\n  getPluginData = name => this.pluginData[name];\n\n  // Plugin data setter\n  setPluginData = (name, data) => { this.pluginData[name] = data; };\n\n  // Set descriptions of the commands\n  setDescriptions = () => {\n    let descriptions = {\n      ...this.props.descriptions,\n      ...this.defaultDesciptions,\n    };\n    pluginMap(this.props.plugins, (plugin) => {\n      if (plugin.descriptions) {\n        descriptions = {\n          ...plugin.descriptions,\n          ...descriptions,\n        };\n      }\n    });\n    this.setState({ descriptions });\n  };\n\n  // Set command shortcuts\n  setShortcuts = () => {\n    let shortcuts = getShortcuts({}, this.defaultShortcuts);\n    shortcuts = getShortcuts(shortcuts, this.props.shortcuts);\n    pluginMap(this.props.plugins, (plugin) => {\n      if (plugin.shortcuts) {\n        shortcuts = getShortcuts(shortcuts, plugin.shortcuts);\n      }\n    });\n    this.setState({ shortcuts });\n  };\n\n  // Setter to change the prefix of the input prompt\n  setPromptPrefix = (instance, promptPrefix) => {\n    if (instance.state.controller === null) {\n      instance.setState({ promptPrefix });\n    }\n  };\n\n  // Setter to change the symbol of the input prompt\n  setPromptSymbol = (instance, prompt) => {\n    if (instance.state.controller === null) {\n      instance.setState({ prompt });\n    }\n  };\n\n  // Set the currently active tab\n  setActiveTab = (activeTab) => {\n    this.setState({ activeTab });\n  };\n\n  // Hide window\n  setFalse = name => () => this.setState({ [name]: false });\n\n  // Show window\n  setTrue = name => () => this.setState({ [name]: true });\n\n  /**\n   * set the input value with the possible history value\n   * @param {number} next position on the history\n   */\n  setValueWithHistory = (instance, position, inputRef) => {\n    const { history } = instance.state;\n    if (history[position]) {\n      instance.setState({ historyCounter: position });\n      inputRef.value = history[position];\n      putCursorAtEnd(inputRef);\n    }\n  };\n\n  // Method to check if version meets criteria\n  checkVersion = (comp, ver) => {\n    if (ver === '*') {\n      return true;\n    }\n    if (!(/^(\\d|\\.)+$/.test(ver))) {\n      throw new Error('Version can only have numbers and periods');\n    } else {\n      let clean = ver.toLowerCase().replace(/x/g, '0');\n      if (clean[clean.length - 1] === '.') {\n        clean += '0';\n      }\n      const split = clean.split('.');\n      while (split.length < 3) {\n        split.push('0');\n      }\n      const realSplit = Terminal.version.split('.');\n      const checkBools = split.map((val, index) => compLogic(comp)(realSplit[index], val));\n      return checkBools.indexOf(false) < 0;\n    }\n  };\n\n  // Used to keep track of all instances\n  registerInstance = (index, instance) => {\n    const { instances } = this.state;\n    const pluginInstances = {};\n    const pluginMethods = {};\n\n    const old = instances.find(i => i.index === index);\n\n    pluginMap(this.props.plugins, (PluginClass, config) => {\n      try {\n        const api = {\n          printLine: this.printLine.bind(this, instance),\n          removeLine: this.removeLine.bind(this, instance),\n          runCommand: this.runCommand.bind(this, instance),\n          setCanScroll: this.setCanScroll.bind(this, instance),\n          setScrollPosition: this.setScrollPosition.bind(this, instance),\n          focusInput: this.focusInput.bind(this, instance),\n          setPromptPrefix: this.setPromptPrefix.bind(this, instance),\n          setPromptSymbol: this.setPromptSymbol.bind(this, instance),\n          getPluginMethod: this.getPluginMethod.bind(this, instance),\n          takeControl: this.pluginTakeControl.bind(this, instance),\n          releaseControl: this.pluginReleaseControl.bind(this, instance),\n          getData: () => this.getPluginData(PluginClass.displayName),\n          setData: data => this.setPluginData(PluginClass.displayName, data),\n          checkVersion: this.checkVersion.bind(this),\n          version: Terminal.version,\n          os,\n        };\n\n        let plugin;\n        if (old) {\n          old.pluginInstances[PluginClass.displayName].updateApi(api);\n        } else {\n          plugin = new PluginClass(api, config);\n          pluginMethods[PluginClass.displayName] = {\n            ...plugin.getPublicMethods(),\n            _getName: () => PluginClass.displayName,\n            _getVersion: () => PluginClass.version,\n          };\n        }\n\n        pluginInstances[PluginClass.displayName] = plugin;\n      } catch (e) {\n        console.error(`Error instantiating plugin ${PluginClass.displayName}`, e); // eslint-disable-line no-console\n      }\n    });\n\n    const data = {\n      index,\n      instance,\n      pluginMethods: old ? old.pluginMethods : pluginMethods,\n      pluginInstances: old ? old.pluginInstances : pluginInstances,\n    };\n\n    if (old) {\n      const realIndex = instances.indexOf(old);\n      instances[realIndex] = data;\n    } else {\n      instances.push(data);\n    }\n\n    this.setState({ instances });\n\n    return () => {\n      const insts = this.state.instances;\n      this.setState({\n        instances: insts.filter(i => !isEqual(i.instance, instance)),\n      });\n    };\n  }\n\n  // allows a plugin to take full control over instance\n  pluginTakeControl = (instance, controller, newPrompt, newPromptPrefix) => {\n    const { promptPrefix, prompt } = instance.state;\n    instance.setState({\n      controller,\n      prompt: typeof newPrompt === 'undefined' ? prompt : newPrompt,\n      promptPrefix: typeof newPromptPrefix === 'undefined' ? promptPrefix : newPromptPrefix,\n      oldPrefix: promptPrefix,\n      oldPrompt: prompt,\n    });\n  };\n\n  // allows a plugin to release full control over instance\n  pluginReleaseControl = (instance) => {\n    const { oldPrefix, oldPrompt } = instance.state;\n    instance.setState({ controller: null, promptPrefix: oldPrefix, prompt: oldPrompt });\n  };\n\n  // Toggle a state boolean\n  toggleState = name => () => this.setState({ [name]: !this.state[name] });\n\n  // Prepare the built-in commands\n  assembleCommands = () => {\n    let commands = {\n      ...this.defaultCommands,\n      ...this.props.commands,\n    };\n\n    pluginMap(this.props.plugins, (plugin) => {\n      if (plugin.commands) {\n        commands = {\n          ...commands,\n          ...plugin.commands,\n        };\n      }\n    });\n\n    this.setState({ commands: modCommands(commands) });\n  };\n\n  /**\n   * autocomplete with the command the have the best match\n   * @param {object} input reference\n   */\n  autocompleteValue = (inputRef) => {\n    const { descriptions } = this.state;\n    const keysToCheck = Object.keys(descriptions).filter(key => descriptions[key] !== false);\n    let ratings = [];\n    if (inputRef.value.length > 1) {\n      ratings = stringSimilarity.findBestMatch( // eslint-disable-line\n        inputRef.value,\n        keysToCheck,\n      ).ratings;\n    } else {\n      ratings = keysToCheck.reduce((full, item) => {\n        if (item.indexOf(inputRef.value) === 0) {\n          full.push({ target: item, rating: 1 });\n        }\n        return full;\n      }, []);\n    }\n    return ratings.filter(item => item.rating > 0);\n  };\n\n  // Refresh or clear the screen\n  clearScreen = (args, printLine, runCommand, instance) => {\n    instance.setState({ summary: [] });\n  };\n\n  // Method to check for shortcut and invoking commands\n  checkShortcuts = (instance, key, e) => {\n    const { controller } = instance.state;\n    let cuts = {};\n    if (controller !== null) {\n      if (controller.shortcuts) {\n        cuts = getShortcuts(cuts, controller.shortcuts);\n      }\n    } else {\n      const instanceData = this.state.instances.find(i => isEqual(i.instance, instance));\n      cuts = this.state.shortcuts;\n      if (instanceData) {\n        Object.values(instanceData.pluginInstances).forEach((i) => {\n          cuts = getShortcuts(cuts, i.shortcuts);\n        });\n      }\n    }\n\n    const shortcuts = Object.keys(cuts);\n    if (shortcuts.length > 0) {\n      const { keyInputs } = instance.state;\n      let modKey = key;\n      if (key === 'meta') {\n        // eslint-disable-next-line no-nested-ternary\n        modKey = os === 'darwin' ? 'cmd' : os === 'win' ? 'win' : 'meta';\n      }\n      keyInputs.push(modKey);\n      const len = keyInputs.length;\n\n      const options = shortcuts\n        .map((cut, i) => [cut.replace(/\\s/g, '').split('+'), i])\n        .filter(cut => cut[0].length >= keyInputs.length)\n        .filter(cut => isEqual(cut[0].slice(0, len), keyInputs));\n\n      if (options.length > 0) {\n        if (options.length === 1 && options[0][0].length === len) {\n          const shortcut = shortcuts[options[0][1]];\n          const action = cuts[shortcut];\n          if (typeof action === 'string') {\n            this.runCommand(instance, cuts[shortcut]);\n          } else if (typeof action === 'function') {\n            e.preventDefault();\n            e.stopPropagation();\n            action();\n          }\n          instance.setState({ keyInputs: [] });\n        }\n      } else if (keyInputs.length > 0) {\n        instance.setState({ keyInputs: [] });\n      }\n    }\n  };\n\n  // edit-line command\n  editLine = (args, printLine, runCommand, instance) => {\n    const { summary } = instance.state;\n    let index = args.line;\n    if (index < 0) {\n      index = summary.length === 0 ? 0 : summary.length - index;\n    }\n    summary[index] = args._.join(' ');\n    instance.setState({ summary });\n  };\n\n  // Listen for user input\n  handleChange = (instance, e) => {\n    const {\n      input, promptPrefix, prompt, history, controller,\n    } = instance.state;\n    const saveToHistory = controller !== null ? (controller.history || false) : true;\n    if (e.key === 'Enter' && !e.shiftKey) {\n      if (typeof e.dontShowCommand === 'undefined') {\n        this.printLine.bind(this, instance)(\n          `${promptPrefix}${prompt} ${e.target.value}`,\n          false,\n        );\n      }\n\n      input.push(e.target.value);\n      const res = this.runCommand(instance, `${input.join('\\n')}`);\n\n      if (typeof res !== 'undefined') {\n        this.printLine.bind(this, instance)(res);\n      }\n\n      const newHistory = [...history, e.target.value];\n      const historyProps = saveToHistory ? {\n        history: newHistory,\n        historyCounter: newHistory.length,\n      } : {};\n      instance.setState({\n        input: [],\n        ...historyProps,\n      });\n      e.target.value = ''; // eslint-disable-line no-param-reassign\n    } else if (e.key === 'Enter' && e.shiftKey) {\n      this.printLine.bind(this, instance)(\n        `${promptPrefix}${prompt} ${e.target.value}`,\n        false,\n      );\n      const newHistory = [...history, e.target.value];\n      const historyProps = saveToHistory ? {\n        history: newHistory,\n        historyCounter: newHistory.length,\n      } : {};\n      instance.setState({\n        input: [...input, e.target.value],\n        ...historyProps,\n      });\n      e.target.value = ''; // eslint-disable-line no-param-reassign\n    }\n    if (typeof this.props.afterChange === 'function') {\n      this.props.afterChange(e);\n    }\n  };\n\n  /**\n   * Base of key code set the value of the input\n   * with the history\n   * @param {event} event of input\n   */\n  handlerKeyPress = (instance, e, inputRef) => {\n    const { key } = whatkey(e);\n    const { historyCounter, keyInputs, controller } = instance.state;\n    if (keyInputs.length === 0 || keyInputs.length === 0) {\n      if (controller !== null) {\n        if (controller.onKeyPress) {\n          controller.onKeyPress(key);\n        }\n      } else {\n        switch (key) {\n          case 'up':\n            this.setValueWithHistory(instance, historyCounter - 1, inputRef);\n            if (this.state.tabbed) {\n              this.setState({ tabbed: false });\n            }\n            break;\n          case 'down':\n            this.setValueWithHistory(instance, historyCounter + 1, inputRef);\n            if (this.state.tabbed) {\n              this.setState({ tabbed: false });\n            }\n            break;\n          case 'tab':\n            e.preventDefault();\n            if (inputRef.value !== '' && this.state.tabbed === true) {\n              const contents = this.autocompleteValue(inputRef);\n              this.printLine(instance, `${instance.state.promptPrefix}${instance.state.prompt} ${inputRef.value}`, false);\n              this.printLine(\n                instance,\n                (\n                  <span>\n                    {contents.filter(item => typeof item !== 'undefined').map((item) => {\n                    const styles = {\n                      marginRight: 5,\n                      width: 'calc(33% - 5px)',\n                      display: 'inline-block',\n                    };\n                    if (contents.length > 3) {\n                      styles.marginBottom = 5;\n                    }\n                    return (\n                      <span\n                        style={styles}\n                        key={`${item.target}-${item.rating}`}\n                      >\n                        {item.target}\n                      </span>\n                    );\n                  })}\n                  </span>\n                ),\n                false,\n              );\n              this.setState({ tabbed: false });\n            } else {\n              this.setState({ tabbed: true });\n            }\n            break;\n          default:\n            if (this.state.tabbed) {\n              this.setState({ tabbed: false });\n            }\n            break;\n        }\n      }\n    }\n    this.checkShortcuts(instance, key, e);\n  }\n\n  // Plugins\n  loadPlugins = () => {\n    const pluginData = {};\n    pluginMap(this.props.plugins, (plugin) => {\n      try {\n        pluginData[plugin.displayName] = plugin.defaultData;\n      } catch (e) {\n        console.error(`Error loading plugin ${plugin.displayName}`, e); // eslint-disable-line no-console\n      }\n    });\n    this.pluginData = pluginData;\n  };\n\n  // Plugin api method to get a public plugin method\n  getPluginMethod = (instance, name, method) => {\n    const instanceData = this.state.instances.find(i => isEqual(i.instance, instance));\n    if (instanceData) {\n      if (instanceData.pluginMethods[name]) {\n        if (instanceData.pluginMethods[name][method]) {\n          return instanceData.pluginMethods[name][method];\n        }\n        throw new Error(`No method with name ${method} has been registered for plugin ${name}`);\n      } else {\n        throw new Error(`No plugin with name ${name} has been registered`);\n      }\n    }\n    return null;\n  };\n\n  // Set if the current tab can scroll\n  setCanScroll = (instance, force) => {\n    if (typeof force !== 'undefined') {\n      instance.setState({ canScroll: force });\n    }\n  }\n\n  // Set the scroll position of the contents\n  setScrollPosition = (instance, pos) => {\n    if (typeof pos === 'number') {\n      instance.setScrollPosition(pos);\n    }\n  }\n\n  // Set focus to the input\n  focusInput = (instance) => {\n    if (typeof pos === 'number') {\n      instance.focusInput();\n    }\n  }\n\n  // Print the summary (input -> output)\n  printLine = (instance, inp, std = true) => {\n    let print = true;\n    if (std) {\n      const instanceData = this.state.instances.find(i => isEqual(i.instance, instance));\n      if (instanceData) {\n        const plugins = instanceData.pluginInstances;\n        for (let i = 0; i < plugins.length; i += 1) {\n          try {\n            print = plugins[i].readStdOut(inp);\n          } catch (e) {\n            // Do nothing\n          }\n        }\n      }\n    }\n\n    if (print !== false) {\n      const { summary } = instance.state;\n      summary.push(inp);\n      instance.setState({ summary });\n    }\n  };\n\n  // Remove a line from the summary\n  removeLine = (instance, lineNumber = -1) => {\n    const { summary } = instance.state;\n    summary.splice(lineNumber, 1);\n    instance.setState({ summary });\n  }\n\n  // Execute the commands\n  runCommand = (instance, inputText, force = false) => {\n    const inputArray = inputText.split(' ');\n    const input = inputArray[0];\n    const args = inputArray; // Undefined for function call\n    const { controller } = instance.state;\n    let commands = {};\n    if (!force && controller !== null) {\n      if (controller.runCommand) {\n        return controller.runCommand(inputText);\n      } else if (controller.commands) {\n        commands = { ...modCommands(controller.commands) };\n      }\n    } else {\n      const instanceData = this.state.instances.find(i => isEqual(i.instance, instance));\n      commands = { ...this.state.commands };\n      if (instanceData) {\n        Object.values(instanceData.pluginInstances).forEach((i) => {\n          commands = {\n            ...commands,\n            ...modCommands(i.commands),\n          };\n        });\n      }\n    }\n\n    const command = commands[input];\n    let res;\n\n    if (input === '') {\n      // do nothing\n    } else if (command === undefined) {\n      console.log(\"input\")\n      console.log(input)\n\n      if (typeof this.props.commandPassThrough === 'function') {\n        res = this.props.commandPassThrough(\n          inputArray,\n          this.printLine.bind(this, instance),\n          this.runCommand.bind(this, instance),\n        );\n      } else {\n        if (input !== 'show') this.printLine.bind(this, instance)(`${input}: command not found`);\n      }\n    } else {\n      const parsedArgs = command.parse(args);\n      const type = typeof parsedArgs;\n      if (type !== 'object' || (type === 'object' && !parsedArgs.help)) {\n        res = command.method(\n          parsedArgs,\n          this.printLine.bind(this, instance),\n          this.runCommand.bind(this, instance),\n          command.needsInstance === true ? instance : undefined,\n        );\n      }\n    }\n    if (typeof this.props.commandWasRun === 'function') {\n      this.props.commandWasRun(\n        inputArray,\n        this.printLine.bind(this, instance),\n        this.runCommand.bind(this, instance),\n      );\n    }\n    return res;\n  };\n\n  // Run a command on the active instance\n  runCommandOnActive = (inputText, force = false) => {\n    const data = this.state.instances.find(i => i.index === this.state.activeTab);\n    if (data && data.instance !== null) {\n      this.runCommand(data.instance, inputText, force);\n    }\n  }\n\n  // Print to active instance\n  printToActive = (...args) => {\n    const data = this.state.instances.find(i => i.index === this.state.activeTab);\n    if (data && data.instance !== null && data.instance.state.controller === null) {\n      this.printLine(data.instance, ...args);\n    }\n  }\n\n  // Listen for console logging and pass the input to handler (handleLogging)\n  watchConsoleLogging = () => {\n    handleLogging('log', this.printToActive);\n    handleLogging('info', this.printToActive);\n  };\n\n  // List all the commands (state + user defined)\n  showHelp = (args, printLine, runCommand, instance) => {\n    console.log(\"commands\")\n    console.log(this.state.commands)\n    let commands = { ...this.state.commands };\n    let descriptions = { ...this.state.descriptions };\n    const instanceData = this.state.instances.find(i => isEqual(i.instance, instance));\n    if (instanceData) {\n      Object.values(instanceData.pluginInstances).forEach((i) => {\n        commands = {\n          ...i.commands,\n          ...commands,\n        };\n        descriptions = {\n          ...i.descriptions,\n          ...descriptions,\n        };\n      });\n    }\n    const options = Object.keys(commands);\n\n    for (const option of options) {\n      // eslint-disable-line no-restricted-syntax\n      if (descriptions[option] !== false) {\n        printLine(`${option} - ${descriptions[option]}`);\n      }\n    }\n  };\n\n  // Show the msg (prop msg)\n  // showMsg = (args, printLine) => {\n  //   if (this.props.msg && this.props.msg.length > 0) {\n  //     printLine(this.props.msg);\n  //   }\n  // };\n\n  render() {\n    const theme = {\n      color: this.props.color,\n      prompt: this.props.prompt,\n      barColor: this.props.barColor,\n      outputColor: this.props.outputColor,\n      backgroundColor: this.props.backgroundColor,\n    };\n\n    return (\n      <ThemeProvider theme={theme}>\n        <Base\n          className=\"terminal-base\"\n          fullscreen={this.state.maximise}\n        >\n          {this.props.children}\n          {this.getAppContent()}\n        </Base>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default Terminal;\n"]}